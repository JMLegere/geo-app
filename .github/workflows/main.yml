name: "Unity Test and Build"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "6.0.x"
      - run: dotnet restore Tests/GeoApp.Tests/GeoApp.Tests.csproj
      - run: dotnet build Tests/GeoApp.Tests/GeoApp.Tests.csproj --no-restore
      - run: dotnet test Tests/GeoApp.Tests/GeoApp.Tests.csproj --no-build --verbosity minimal

  unity-build:
    needs: test
    runs-on: ubuntu-latest
    environment: Unity Secrets
    steps:
      - uses: actions/checkout@v3

      # Cache Library to speed up builds
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**','Packages/**','ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build & activate license in one step
      - name: Build Unity project
        uses: game-ci/unity-builder@v4
        env:
          # For Personal license:
          UNITY_LICENSE:   ${{ secrets.UNITY_LICENSE }}
          # For Professional license (uncomment):
          # UNITY_SERIAL:  ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL:     ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD:  ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform:    StandaloneLinux64
          unityVersion:      6000.0.50f1
          allowDirtyBuild:   true

      - uses: actions/upload-artifact@v4
        with:
          name: UnityBuild
          path: build
