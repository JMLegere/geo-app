name: Unity CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  UNITY_VERSION: "2023.1.0f1"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - uses: actions/setup-dotnet@v4
        name: Setup .NET 6 SDK
        with:
          dotnet-version: "6.0.x"

      - run: dotnet restore Tests/GeoApp.Tests/GeoApp.Tests.csproj
        name: Restore test dependencies

      - run: dotnet build Tests/GeoApp.Tests/GeoApp.Tests.csproj --no-restore
        name: Build test project

      - run: dotnet test Tests/GeoApp.Tests/GeoApp.Tests.csproj --no-build --verbosity minimal
        name: Run unit tests

  unity-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - name: Decode base64 Unity license
        run: |
          echo "${{ secrets.UNITY_LICENSE_B64 }}" | base64 --decode > unity.ulf
          echo "UNITY_LICENSE<<EOF" >> $GITHUB_ENV
          cat unity.ulf >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Activate Unity license
        uses: game-ci/unity-activate@v2
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
        env:
          UNITY_EMAIL:    ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE:  ${{ env.UNITY_LICENSE }}
          UNITY_SERIAL:   ${{ secrets.UNITY_SERIAL }}

      - name: Build Unity project
        uses: game-ci/unity-builder@v2
        with:
          projectPath: .
          targetPlatform: WSAPlayer
          unityVersion: ${{ env.UNITY_VERSION }}
          customImage: unityci/editor:ubuntu-${{ env.UNITY_VERSION }}-linux-il2cpp-1

      - name: Upload Unity build artifact
        uses: actions/upload-artifact@v4
        with:
          name: UnityBuild
          path: build
